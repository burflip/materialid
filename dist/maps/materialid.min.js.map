{"version":3,"sources":["core.js","steps.js","validators/between.js","validators/cif.js","validators/custom.js","validators/digits.js","validators/dni.js","validators/email.js","validators/iban.js","validators/identical.js","validators/length.js","validators/nie.js","validators/nif.js","validators/nif_cif.js","validators/notEmpty.js","validators/numeric.js","validators/password.js","validators/regexp.js","es_ES.js"],"names":["initMaterialid","selector","config_array","config","locale","materialid","lang","$","extend","validateMaterialidContainer","steps","initMaterialidSteps","is","initMaterialidListeners","on","e","evaluateMaterialidFields","form_obj","is_valid","submit_callback","console","log","each","fields","k","v","addMaterialidValidationListenerToField","find","field","field_options","trigger","change","validateMaterialidField","field_valid","msg","enable_visible","attr","validators","materialidValidator","undefined","messages","error_callback","success_callback","custom_success_field","custom_error_field","callback","settings","callbacksIndex","materialidErrorCallback","length","errorField","addClass","after","text","removeClass","materialidSuccessCallback","parent","remove","hideMaterialidSteps","calculateMaterialidStepsTotal","renderMaterialidControls","renderMaterialidNavigator","render_navigator","starting_step","animateMaterialidNavigator","step_class","hide","show","stepMaterialidForward","current_step","total_steps","stepMaterialid","stepMaterialidBackward","oper","last_step","ending_step","zero","inner","last","html","startingMaterialidNavigationControls","submitMaterialidNavigationControls","usualMaterialidNavigationControls","loader","percent","Math","round","animate","left","css","width","next_button_class","starting_button_icon","starting_button_text","previous_button_class","previous_text","previous_button_icon","next_text","next_button_icon","submit_button_class","submit_button_icon","submit_button_text","between","min_included","max_included","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","value","val","isNaN","cif","notEmpty","toUpperCase","validateCIF","texto","suma","ultima","unumero","xxx","pares","impares","uletra","Array","regular","exec","substr","cont","parseInt","toString","custom","digits","setttings","test","dni","validateDNI","charIndex","la","charAt","email","iban","countrycode","ibancheck","cChar","bbanpattern","bbancountrypatterns","ibanregexp","i","p","replace","ibancheckdigits","leadingZeroes","cRest","cOperator","substring","AL","AD","AT","AZ","BE","BH","BA","BR","BG","CR","HR","CY","CZ","DK","DO","EE","FO","FI","FR","GE","DE","GI","GR","GL","GT","HU","IS","IE","IL","IT","KZ","KW","LV","LB","LI","LT","LU","MK","MT","MR","MU","MC","MD","ME","NL","NO","PK","PS","PL","PT","RO","SM","SA","RS","SK","SI","ES","SE","CH","TN","TR","AE","GB","VG","RegExp","indexOf","identical","field_id","l","nie","str","validateNIE","letter","nif","nif_cif","field_type","trim","numeric","password","min_length","uppercase","number","special_chars","regexp","pattern","on_forward","on_backward","fn","this","es_ES","checked","one_checked","n_checked","dni_nie","ending_button_text"],"mappings":"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","file":"materialid.min.js","sourcesContent":["/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n/**\n * Main materialid configuration\n * @type {{fields: undefined, config: {locale: string, trigger: string, error_callback: materialidErrorCallback, success_callback: materialidSuccessCallback, enable_visible: boolean, steps: undefined, step_class: string, on_forward: undefined, on_backward: undefined, starting_step: number, ending_step: number, current_step: number, last_step: number, total_steps: number, next_text: string, previous_text: string, submit_button_text: string, starting_button_text: string, previous_button_class: string, next_button_class: string, submit_button_class: string, next_button_icon: string, previous_button_icon: string, submit_button_icon: string, starting_button_icon: string, render_navigator: boolean}, form_obj: {selector: undefined, is_valid: boolean}, messages: {}}}\n */\nvar materialid = {\n    fields: undefined,\n    config: {\n        locale: \"es_ES\",\n        trigger: \"change\",\n        error_callback: materialidErrorCallback,\n        success_callback: materialidSuccessCallback,\n        enable_visible: true,\n        steps: undefined,\n        step_class: \"step\",\n        on_forward: undefined,\n        on_backward: undefined,\n        starting_step:1,\n        ending_step: 0,\n        current_step: 0,\n        last_step: 0,\n        total_steps: 0,\n        next_text: \"Next\",\n        previous_text: \"Previous\",\n        submit_button_text: \"Submit\",\n        starting_button_text: \"Next\",\n        previous_button_class: \"indigo\",\n        next_button_class: \"indigo\",\n        submit_button_class: \"indigo\",\n        next_button_icon: \"keyboard_arrow_right\",\n        previous_button_icon: \"keyboard_arrow_left\",\n        submit_button_icon: \"done\",\n        starting_button_icon: \"keyboard_arrow_right\",\n        render_navigator: false\n    },\n    form_obj: {\n        selector: undefined,\n        is_valid: true\n    },\n    lang:{},\n    messages: {}\n}\n\n/**\n * Index of current defined validators\n * @type {{notEmpty: notEmpty}}\n */\nvar callbacksIndex = {\n    \"notEmpty\": notEmpty,\n    \"regexp\": regexp,\n    \"digits\": digits,\n    \"numeric\": numeric,\n    \"dni\": dni,\n    \"nie\": nie,\n    \"cif\": cif,\n    \"nif\" : nif,\n    \"nif_cif\" : nif_cif,\n    \"custom\": custom,\n    \"between\": between,\n    \"length\": length,\n    \"email\" : email,\n    \"iban\" : iban\n}\n\n/**\n * Creation of jQuery function\n */\n$.fn.materialid = function (config_array) {\n    initMaterialid(this, config_array)\n}\n\n\n/**\n * Initialization of Materialid\n * @param selector\n * @param config_array\n */\nfunction initMaterialid(selector, config_array) {\n    if(typeof config_array.config.locale !== \"undefined\") {\n        materialid.lang[config_array.config.locale]();\n    } else {\n        materialid.lang[materialid.config.locale]();\n    }\n    $.extend(true, materialid, config_array);\n    validateMaterialidContainer(selector)\n}\n\n/**\n * Materialid container validation\n * @param selector\n * @param config_array\n */\nfunction validateMaterialidContainer(selector) {\n    // Step-form functionality\n    if (materialid.config.steps == true) {\n        initMaterialidSteps();\n    }\n    if (selector.is(\"form\")) {\n        initMaterialidListeners(selector);\n        //Attaching form submit validation\n        selector.on(\"submit\", function (e) {\n\n            evaluateMaterialidFields(selector);\n            if (!materialid.form_obj.is_valid) {\n                return false;\n            } else {\n                if (typeof materialid.config.submit_callback === \"function\") {\n                    return materialid.config.submit_callback();\n                } else {\n                    return true;\n                }\n            }\n        });\n    } else if (selector.is(\"div\")) {\n        initMaterialidListeners(selector);\n    } else {\n        console.log(\"Invalid selector: \", selector);\n        console.log(\"Types availables: div and form.\");\n    }\n}\n\n/**\n * Inits the fields' listeners to invoke validation\n * @param selector\n * @param config_array\n */\nfunction initMaterialidListeners(selector) {\n    $.each(materialid.fields, function (k, v) {\n        addMaterialidValidationListenerToField(selector.find(\"#\" + k), v);\n    })\n}\n\n/**\n * Attach a validation listener to a field\n * @param field\n * @param field_options\n */\nfunction addMaterialidValidationListenerToField(field, field_options) {\n    if (materialid.config.trigger == \"change\") {\n        field.change(function () {\n            validateMaterialidField(field, field_options);\n        })\n    } else {\n        //TODO: attach to trigger\n    }\n}\n\n/**\n * Validates a single field bearing in mind the \"enable_visible\" configuration option\n * @param field\n * @param field_options\n * @returns {boolean}\n */\nfunction validateMaterialidField(field, field_options) {\n    var field_valid = true;\n    var msg = \"\";\n    if ((materialid.config.enable_visible && (field.is(\":visible\") || field.attr(\"type\") == \"hidden\")) || !materialid.config.enable_visible) {\n        if (typeof field_options.validators !== \"undefined\") {\n            $.each(field_options.validators, function (k, v) {\n                field_valid = materialidValidator(field, k, v) ? field_valid : false;\n                if(!field_valid  || msg == \"\") {\n                    msg = (v[\"msg\"] !== undefined) ? v[\"msg\"] : ((materialid.messages[k] == undefined) ? msg : materialid.messages[k]);\n                }\n\n            })\n        } else {\n            field_valid = true;\n            console.log(\"Be careful, validator list for field #\" + field.attr(\"id\") + \" is undefined.\");\n        }\n        if (field_options.error_callback !== undefined && !field_valid) {\n            // TODO: add documentation for custom_error_field\n            if (field_options.custom_error_field !== undefined) {\n                field_options.error_callback(field_options.custom_error_field, msg);\n            } else {\n                field_options.error_callback(field, msg);\n            }\n        } else if (field_options.success_callback !== undefined && field_valid) {\n            // TODO: add documentation for custom_success_field\n            if (field_options.custom_success_field !== undefined) {\n                field_options.success_callback(field_options.custom_success_field, msg);\n            } else {\n                field_options.success_callback(field, msg);\n            }\n        } else {\n            field_valid ? materialid.config.success_callback(field, msg) : materialid.config.error_callback(field, msg);\n        }\n        materialid.form_obj.is_valid = field_valid ? materialid.form_obj.is_valid : false;\n    }\n    return field_valid;\n}\n\n/**\n * Evaluate all fields without calling or invoking listeners.\n * @param selector\n * @param config_array\n */\nfunction evaluateMaterialidFields(selector) {\n    materialid.form_obj.is_valid = true;\n    $.each(materialid.fields, function (k, v) {\n        validateMaterialidField(selector.find(\"#\" + k), v);\n    })\n}\n\n/**\n * Calls a concrete validator if exists, or return false and output an error on the console.\n * @param field\n * @param callback\n * @param settings\n * @returns {*}\n */\nfunction materialidValidator(field, callback, settings) {\n    if (typeof callbacksIndex[callback] !== \"undefined\") {\n        return callbacksIndex[callback](field, settings);\n    } else {\n        console.log(\"Callback \" + callback + \" undefined.\");\n        return false;\n    }\n}\n\n/**\n * Default error callback\n * @param field\n * @param msg\n */\nfunction materialidErrorCallback(field, msg) {\n\n    if ($(\"#\" + field.attr(\"id\") + \"_validation_msg\").length == 0) {\n        var errorField = \"<span id='\" + field.attr(\"id\") + \"_validation_msg' class='validation-msg'></span>\";\n        if(field.attr(\"type\") == \"radio\" || field.attr(\"type\") == \"checkbox\") {\n            $(\"label[for='\"+field.attr(\"id\")+\"'\").addClass(\"red-text\").after(\"<p>\"+errorField+\"</p>\");\n\n        } else {\n            field.after(errorField);\n        }\n\n    }\n    $(\"#\" + field.attr(\"id\") + \"_validation_msg\").text(msg);\n    field.removeClass(\"valid\").addClass(\"invalid\");\n}\n\n/**\n * Default success callback\n * @param field\n * @param msg\n */\nfunction materialidSuccessCallback(field, msg) {\n    if(field.attr(\"type\") == \"radio\" || field.attr(\"type\") == \"checkbox\") {\n        $(\"#\" + field.attr(\"id\") + \"_validation_msg\").parent().remove();\n        $(\"label[for='\"+field.attr(\"id\")+\"'\").removeClass(\"red-text\")\n    } else {\n        $(\"#\" + field.attr(\"id\") + \"_validation_msg\").remove();\n    }\n    field.removeClass(\"invalid\").addClass(\"valid\");\n}","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nfunction initMaterialidSteps() {\n    hideMaterialidSteps();\n    calculateMaterialidStepsTotal();\n    renderMaterialidControls();\n    (materialid.config.render_navigator) ? renderMaterialidNavigator() : null;\n    (materialid.config.render_navigator && materialid.config.starting_step != 1) ? animateMaterialidNavigator() : null;\n\n}\n\nfunction hideMaterialidSteps() {\n    $(\".\" + materialid.config.step_class).hide();\n    $($(\".\" + materialid.config.step_class)[0]).show();\n}\n\nfunction stepMaterialidForward() {\n    if (materialid.config.current_step < materialid.config.total_steps) {\n        evaluateMaterialidFields($($(\".\" + materialid.config.step_class)[materialid.config.current_step]), materialid);\n        if (materialid.form_obj.is_valid) {\n            stepMaterialid(+1);\n        }\n    }\n}\n\nfunction stepMaterialidBackward() {\n    if (materialid.config.current_step > 0) {\n        stepMaterialid(-1);\n    }\n}\n\nfunction stepMaterialid(oper) {\n    materialid.config.last_step = materialid.config.current_step;\n    materialid.config.current_step += oper;\n    $($(\".\" + materialid.config.step_class)[materialid.config.last_step]).hide();\n    $($(\".\" + materialid.config.step_class)[materialid.config.current_step]).show();\n    renderMaterialidControls();\n    (materialid.config.render_navigator) ? animateMaterialidNavigator() : null;\n}\n\nfunction calculateMaterialidStepsTotal() {\n\n    materialid.config.total_steps = $(\".\" + materialid.config.step_class).length - 1;\n    materialid.config.ending_step = (materialid.config.ending_step == 0\n    || materialid.config.ending_step < materialid.config.total_steps) ? materialid.config.total_steps : materialid.config.ending_step;\n}\n\n/**\n * Uses .navigation-controls selector to generate navigation buttons\n */\nfunction renderMaterialidControls() {\n    var zero = materialid.config.current_step == 0,\n        inner = materialid.config.current_step == materialid.config.total_steps,\n        last = materialid.config.last_step == 0 || materialid.config.last_step == materialid.config.total_steps,\n        change = zero || inner || last;\n    if (zero) {\n        $(\".navigation-controls\").html(startingMaterialidNavigationControls());\n    } else if (inner) {\n        $(\".navigation-controls\").html(submitMaterialidNavigationControls());\n    } else if (last) {\n        $(\".navigation-controls\").html(usualMaterialidNavigationControls());\n    }\n    if (change) {\n        $(\".step-forward\").on(\"click\", stepMaterialidForward);\n        $(\".step-backward\").on(\"click\", stepMaterialidBackward);\n    }\n}\n\n/**\n * Uses .navigator selector to generate navigation progress bar and steps\n */\nfunction renderMaterialidNavigator() {\n    var loader = '<div class=\"steps-navigation-container\">' +\n        '    <div class=\"step-indicator initial-step\">' +\n        '        ' + materialid.config.starting_step +\n        '    </div>' +\n        '    <div class=\"progress\">' +\n        '        <div class=\"determinate\"></div>' +\n        '    </div>' +\n        '</div>';\n    $(\".navigator\").html(loader);\n}\n\nfunction animateMaterialidNavigator() {\n    var percent = Math.round((materialid.config.current_step+(materialid.config.starting_step-1)) * 100 / (materialid.config.ending_step));\n    if ((materialid.config.current_step+(materialid.config.starting_step-1)) == 0) {\n        $(\".steps-navigation-container .step-indicator\").addClass(\"initial-step\")\n    } else {\n        $(\".steps-navigation-container .step-indicator\").removeClass(\"initial-step\")\n    }\n    if (materialid.config.current_step+(materialid.config.starting_step-1) == materialid.config.ending_step) {\n        $(\".steps-navigation-container .step-indicator\").html('<i class=\"material-icons\">done</i>').addClass(\"final-step\");\n    } else {\n        $(\".steps-navigation-container .step-indicator\").text(materialid.config.current_step + ((materialid.config.ending_step == materialid.config.total_steps) ? 1 : materialid.config.starting_step)).removeClass(\"final-step\");\n    }\n\n    $(\".steps-navigation-container .step-indicator\").animate({\n        left: percent + \"%\"\n    }, 300, \"linear\");\n\n    $(\".steps-navigation-container .progress .determinate\").css({width: percent + \"%\"});\n}\n\nfunction startingMaterialidNavigationControls() {\n    return '<div class=\"row\">' +\n        '<div class=\"col s12\">' +\n        '<a class=\"waves-effect waves-light btn right step-forward ' + materialid.config.next_button_class + '\"><i class=\"material-icons right\">' + materialid.config.starting_button_icon + '</i>' + materialid.config.starting_button_text + '</a>' +\n        '<div class=\"clearfix\"></div></div>' +\n        '</div>';\n}\n\nfunction usualMaterialidNavigationControls() {\n    return '<div class=\"row\"> ' +\n        '<div class=\"col s12\">' +\n        '<a class=\"waves-effect waves-light btn left step-backward ' + materialid.config.previous_button_class + '\">' +\n        materialid.config.previous_text +\n        '<i class=\"material-icons left\">'+materialid.config.previous_button_icon+'</i></a>' +\n        '<a class=\"waves-effect waves-light btn right step-forward ' + materialid.config.next_button_class + '\">' +\n        materialid.config.next_text +\n        '<i class=\"material-icons right\">'+materialid.config.next_button_icon+'</i></a>' +\n        '<div class=\"clearfix\"></div></div>' +\n        '</div>';\n}\n\nfunction submitMaterialidNavigationControls() {\n    return '<div class=\"row\">' +\n        '<div class=\"col s12\">' +\n        '<a class=\"waves-effect waves-light btn left step-backward ' + materialid.config.previous_button_class + '\">' + materialid.config.previous_text + '<i class=\"material-icons left\">'+materialid.config.previous_button_icon+'</i></a>' +\n        '<button type=\"submit\" class=\"waves-effect waves-light btn right ' + materialid.config.submit_button_class + '\"><i class=\"material-icons right\">' + materialid.config.submit_button_icon + '</i>' + materialid.config.submit_button_text + '</button>' +\n        '<div class=\"clearfix\"></div></div>' +\n        '</div>'\n}","/** @namespace Number.MAX_SAFE_INTEGER */\n/** @namespace Number.MIN_SAFE_INTEGER */\n/**\n * Returns true if field value is between two parameters.\n * Check if is numeric value. No point to use it along numeric.\n * -----------------------------------\n * Default options are:\n * between:{\n *  min:-Number.MIN_SAFE_INTEGER,\n *  max:Number.MAX_SAFE_INTEGER,\n *  min_included:false,\n *  max_included:false\n * }\n * -----------------------------------\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction between(field, settings) {\n    typeof settings[\"min_included\"] !== \"undefined\" ? null : settings.min_included = false;\n    typeof settings[\"max_included\"] !== \"undefined\" ? null : settings.max_included = false;\n    typeof settings[\"min\"] !== \"undefined\" ? null : settings.min = Number.MIN_SAFE_INTEGER;\n    typeof settings[\"max\"] !== \"undefined\" ? null : settings.max = Number.MAX_SAFE_INTEGER;\n    var is_valid, value = field.val();\n    if (!isNaN(value)) {\n        is_valid = (settings.min < value && value < settings.max) ? true : false;\n        if (settings.min_included && !settings.max_included) {\n            (settings.min <= value && value < settings.max) ? is_valid = true : null;\n        } else if (!settings.min_included && settings.max_included) {\n            (settings.min < value && value <= settings.max) ? is_valid = true : null;\n        } else if (settings.min_included && settings.max_included) {\n            (settings.min <= value && value <= settings.max) ? is_valid = true : null;\n        }\n    }\n    return is_valid;\n}","/**\n * Checks if the field value is a valid spanish Company ID (CIF)\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction cif(field, settings) {\n    var is_valid = false;\n    if (notEmpty(field)) {\n        var value = field.val().toUpperCase();\n        is_valid = validateCIF(value)\n    } else {\n        is_valid = false;\n    }\n    return is_valid;\n}\n\nfunction validateCIF(texto)\n{\n    var pares = 0;\n    var impares = 0;\n    var suma;\n    var ultima;\n    var unumero;\n    var uletra = new Array(\"J\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\");\n    var xxx;\n\n    texto = texto.toUpperCase();\n\n    var regular = /^[ABCDEFGHKLMNPQS]\\d\\d\\d\\d\\d\\d\\d[0-9,A-J]$/g;\n    if (!regular.exec(texto)) return false;\n\n    ultima = texto.substr(8,1);\n\n    for (var cont = 1 ; cont < 7 ; cont ++){\n        xxx = (2 * parseInt(texto.substr(cont++,1))).toString() + \"0\";\n        impares += parseInt(xxx.substr(0,1)) + parseInt(xxx.substr(1,1));\n        pares += parseInt(texto.substr(cont,1));\n    }\n    xxx = (2 * parseInt(texto.substr(cont,1))).toString() + \"0\";\n    impares += parseInt(xxx.substr(0,1)) + parseInt(xxx.substr(1,1));\n\n    suma = (pares + impares).toString();\n    unumero = parseInt(suma.substr(suma.length - 1, 1));\n    unumero = (10 - unumero).toString();\n    if(unumero == 10) unumero = 0;\n\n    if ((ultima == unumero) ||  (ultima == uletra[unumero]))\n        return true;\n    else\n        return false;\n\n}","/**\n * Returns true if callback function returns true.\n * Returns false if callback function returns false, or a non-boolean variable, or is undefined.\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction custom(field, settings) {\n    var is_valid = (typeof settings.callback !== \"undefined\") ? settings.callback(field) : false;\n    is_valid = (typeof is_valid === \"boolean\") ? is_valid : false;\n    return is_valid;\n}","/**\n * Usage:\n * digits:{}\n * Applicable fields: all with .val()\n * @param field\n * @param setttings\n * @returns {boolean}\n */\nfunction digits(field, setttings) {\n    return !/\\D+/g.test(field.val());\n}","/**\n * Checks if field is a valid spanish ID (DNI)\n * @param field\n * @param setttings\n * @returns {boolean}\n */\nfunction dni(field, setttings) {\n    var dni = field.val();\n    return validateDNI(dni);\n}\n\n/**\n * Checks if a value is a valid spanish ID (DNI)\n * @param dni\n * @returns {boolean}\n */\nfunction validateDNI(dni) {\n    var is_valid = true;\n    if (/^\\d{8}[a-zA-Z]$/.test(dni) == true) {\n        var charIndex = parseInt(dni.substr(0, 8)) % 23;\n        var la = 'TRWAGMYFPDXBNJZSQVHLCKET'.charAt(charIndex);\n        la != dni.substr(dni.length - 1, 1).toUpperCase() ? is_valid = false : null;\n    } else {\n        is_valid = false;\n    }\n    return is_valid;\n}","/**\n * Validate an email\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction email(field,settings)\n{\n    var is_valid = (field.val() == \"\") ? true : /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(field.val());\n    return is_valid;\n}","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nfunction iban(field,settings)\n{\n\n    var iban = field.val().replace( / /g, \"\" ).toUpperCase(),\n        ibancheckdigits = \"\",\n        leadingZeroes = true,\n        cRest = \"\",\n        cOperator = \"\",\n        countrycode, ibancheck, charAt, cChar, bbanpattern, bbancountrypatterns, ibanregexp, i, p;\n\n    if(iban == \"\") {\n        return true;\n    }\n\n    // Check the country code and find the country specific format\n    countrycode = iban.substring( 0, 2 );\n    bbancountrypatterns = {\n        \"AL\": \"\\\\d{8}[\\\\dA-Z]{16}\",\n        \"AD\": \"\\\\d{8}[\\\\dA-Z]{12}\",\n        \"AT\": \"\\\\d{16}\",\n        \"AZ\": \"[\\\\dA-Z]{4}\\\\d{20}\",\n        \"BE\": \"\\\\d{12}\",\n        \"BH\": \"[A-Z]{4}[\\\\dA-Z]{14}\",\n        \"BA\": \"\\\\d{16}\",\n        \"BR\": \"\\\\d{23}[A-Z][\\\\dA-Z]\",\n        \"BG\": \"[A-Z]{4}\\\\d{6}[\\\\dA-Z]{8}\",\n        \"CR\": \"\\\\d{17}\",\n        \"HR\": \"\\\\d{17}\",\n        \"CY\": \"\\\\d{8}[\\\\dA-Z]{16}\",\n        \"CZ\": \"\\\\d{20}\",\n        \"DK\": \"\\\\d{14}\",\n        \"DO\": \"[A-Z]{4}\\\\d{20}\",\n        \"EE\": \"\\\\d{16}\",\n        \"FO\": \"\\\\d{14}\",\n        \"FI\": \"\\\\d{14}\",\n        \"FR\": \"\\\\d{10}[\\\\dA-Z]{11}\\\\d{2}\",\n        \"GE\": \"[\\\\dA-Z]{2}\\\\d{16}\",\n        \"DE\": \"\\\\d{18}\",\n        \"GI\": \"[A-Z]{4}[\\\\dA-Z]{15}\",\n        \"GR\": \"\\\\d{7}[\\\\dA-Z]{16}\",\n        \"GL\": \"\\\\d{14}\",\n        \"GT\": \"[\\\\dA-Z]{4}[\\\\dA-Z]{20}\",\n        \"HU\": \"\\\\d{24}\",\n        \"IS\": \"\\\\d{22}\",\n        \"IE\": \"[\\\\dA-Z]{4}\\\\d{14}\",\n        \"IL\": \"\\\\d{19}\",\n        \"IT\": \"[A-Z]\\\\d{10}[\\\\dA-Z]{12}\",\n        \"KZ\": \"\\\\d{3}[\\\\dA-Z]{13}\",\n        \"KW\": \"[A-Z]{4}[\\\\dA-Z]{22}\",\n        \"LV\": \"[A-Z]{4}[\\\\dA-Z]{13}\",\n        \"LB\": \"\\\\d{4}[\\\\dA-Z]{20}\",\n        \"LI\": \"\\\\d{5}[\\\\dA-Z]{12}\",\n        \"LT\": \"\\\\d{16}\",\n        \"LU\": \"\\\\d{3}[\\\\dA-Z]{13}\",\n        \"MK\": \"\\\\d{3}[\\\\dA-Z]{10}\\\\d{2}\",\n        \"MT\": \"[A-Z]{4}\\\\d{5}[\\\\dA-Z]{18}\",\n        \"MR\": \"\\\\d{23}\",\n        \"MU\": \"[A-Z]{4}\\\\d{19}[A-Z]{3}\",\n        \"MC\": \"\\\\d{10}[\\\\dA-Z]{11}\\\\d{2}\",\n        \"MD\": \"[\\\\dA-Z]{2}\\\\d{18}\",\n        \"ME\": \"\\\\d{18}\",\n        \"NL\": \"[A-Z]{4}\\\\d{10}\",\n        \"NO\": \"\\\\d{11}\",\n        \"PK\": \"[\\\\dA-Z]{4}\\\\d{16}\",\n        \"PS\": \"[\\\\dA-Z]{4}\\\\d{21}\",\n        \"PL\": \"\\\\d{24}\",\n        \"PT\": \"\\\\d{21}\",\n        \"RO\": \"[A-Z]{4}[\\\\dA-Z]{16}\",\n        \"SM\": \"[A-Z]\\\\d{10}[\\\\dA-Z]{12}\",\n        \"SA\": \"\\\\d{2}[\\\\dA-Z]{18}\",\n        \"RS\": \"\\\\d{18}\",\n        \"SK\": \"\\\\d{20}\",\n        \"SI\": \"\\\\d{15}\",\n        \"ES\": \"\\\\d{20}\",\n        \"SE\": \"\\\\d{20}\",\n        \"CH\": \"\\\\d{5}[\\\\dA-Z]{12}\",\n        \"TN\": \"\\\\d{20}\",\n        \"TR\": \"\\\\d{5}[\\\\dA-Z]{17}\",\n        \"AE\": \"\\\\d{3}\\\\d{16}\",\n        \"GB\": \"[A-Z]{4}\\\\d{14}\",\n        \"VG\": \"[\\\\dA-Z]{4}\\\\d{16}\"\n    };\n\n    bbanpattern = bbancountrypatterns[ countrycode ];\n\n    // As new countries will start using IBAN in the\n    // future, we only check if the countrycode is known.\n    // This prevents false negatives, while almost all\n    // false positives introduced by this, will be caught\n    // by the checksum validation below anyway.\n    // Strict checking should return FALSE for unknown\n    // countries.\n    if ( typeof bbanpattern !== \"undefined\" ) {\n        ibanregexp = new RegExp( \"^[A-Z]{2}\\\\d{2}\" + bbanpattern + \"$\", \"\" );\n        if ( !( ibanregexp.test( iban ) ) ) {\n            return false; // Invalid country specific format\n        }\n    }\n\n    // Now check the checksum, first convert to digits\n    ibancheck = iban.substring( 4, iban.length ) + iban.substring( 0, 4 );\n    for ( i = 0; i < ibancheck.length; i++ ) {\n        charAt = ibancheck.charAt( i );\n        if ( charAt !== \"0\" ) {\n            leadingZeroes = false;\n        }\n        if ( !leadingZeroes ) {\n            ibancheckdigits += \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf( charAt );\n        }\n    }\n\n    // Calculate the result of: ibancheckdigits % 97\n    for ( p = 0; p < ibancheckdigits.length; p++ ) {\n        cChar = ibancheckdigits.charAt( p );\n        cOperator = \"\" + cRest + \"\" + cChar;\n        cRest = cOperator % 97;\n    }\n    return cRest === 1;\n}","/**\n * Check if a field value is exactly the same as another\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction identical(field,settings)\n{\n    return (field.val() == $(\"#\"+settings.field_id).val());\n}","/** @namespace Number.MAX_SAFE_INTEGER */\n/**\n * Returns true if field length is between two values or exactly n length.\n * Exact overrides max and min.\n * -----------------------------------\n * Default options are:\n * length:{\n *  min:0\n *  max:Number.MAX_SAFE_INTEGER,\n *  exact:undefined\n * }\n * -----------------------------------\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction length(field, settings)\n{\n\n    var l = field.val().length;\n    var is_valid = true;\n\n    if(field.val() != \"\") {\n        if(settings[\"exact\"] == undefined) {\n            settings[\"min\"] = (settings[\"min\"] == undefined) ? 0 : settings[\"min\"];\n            settings[\"max\"] = (settings[\"max\"] == undefined) ? 0 : settings[\"max\"];\n        } else {\n            settings[\"min\"] = settings[\"max\"] = settings[\"exact\"] = (settings[\"exact\"] < 0) ? Number.MAX_SAFE_INTEGER : settings[\"exact\"];\n        }\n        is_valid = (l<=settings[\"max\"] && l>=settings[\"min\"]);\n    }\n\n\n    return is_valid;\n}","/**\n *\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction nie(field, settings) {\n    var str = field.val().toString().toUpperCase();\n    return (str == \"\") ? true : validateNIE(str);\n}\n\nfunction validateNIE(nie)\n{\n    var is_valid = true;\n    if (/^[XYZ][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKET]$/i.test(nie)) {\n        var nie = nie.replace(/^[X]/, '0').replace(/^[Y]/, '1').replace(/^[Z]/, '2');\n        var letter = nie.substr(-1);\n        ('TRWAGMYFPDXBNJZSQVHLCKET'.charAt(parseInt(nie.substr(0, 8)) % 23) === letter) ? is_valid = true : is_valid = false;\n    } else {\n        is_valid = false;\n    }\n\n    return is_valid;\n}","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nfunction nif(field, settings) {\n    var str = field.val().toString().toUpperCase();\n    var is_valid = true;\n    if(str != \"\") {\n        is_valid = validateNIE(str) || validateDNI(str);\n    }\n    return is_valid;\n}\n","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nfunction nif_cif(field,settings)\n{\n    var str = field.val().toString().toUpperCase();\n    return (str == \"\") ? true : (validateNIE(str) || validateDNI(str) || validateCIF(str));\n}","/**\n * Applicable fields: text, email, password, radio, checkbox, file, select\n * @param field\n * @returns {boolean}\n */\nfunction notEmpty(field) {\n    var is_valid = true;\n    var field_type = field.attr('type');\n    switch (field_type) {\n        case \"checkbox\":\n            field.is(\":checked\") ? null : is_valid = false;\n            break;\n        default:\n            $.trim(field.val()).length === 0 ? is_valid = false : null;\n            break;\n    }\n    return is_valid;\n}","/**\n * Returns if a field value is a numeric value\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction numeric(field, settings) {\n    return !isNaN(field.val());\n}","/**\n *\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction password(field,settings)\n{\n    var value = field.val();\n    var is_valid = (/[a-z]+/.test(value));\n    if(is_valid) {\n        is_valid = (settings.min_length) ? $.trim(value).length >= settings.min_length : is_valid;\n        is_valid = (settings.uppercase && is_valid) ? /[A-Z]+/.test(value) : is_valid;\n        is_valid = (settings.number && is_valid) ? /\\d+/.test(value) : is_valid;\n        is_valid = (settings.special_chars && is_valid) ? /[!@#\\$%\\^\\&*\\)\\(+=._-]+/.test(value) : is_valid;\n    }\n\n    return is_valid;\n}","/**\n * Usage:\n * regexp:{\n *  pattern:/e/\n * }\n * Applicable fields: all with .val()\n * @param field\n * @returns {boolean}\n */\nfunction regexp(field, setttings) {\n    return setttings.pattern.test(field.val());\n}","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nmaterialid.lang.es_ES = function() {\n    var messages =\n    {\n        notEmpty: \"Este campo es obligatorio.\",\n        checked: \"Tienes seleccionar esta casilla para continuar.\",\n        one_checked: \"Tienes seleccionar al menos una casilla para continuar.\",\n        n_checked: \"Tienes seleccionar al menos %a% casillas para continuar.\",\n        dni: \"Ha de ser un DNI válido.\",\n        nie: \"Ha de ser un NIE válido.\",\n        dni_nie: \"Ha de ser un DNI válido.\",\n        cif: \"Ha de ser un CIF válido.\",\n        nif_cif: \"Ha de ser un DNI, NIE o CIF válido.\",\n        digits: \"Ha de contener sólo números.\",\n        numeric: \"Ha de contener sólo números.\",\n        between: \"Debe contener entre  %a% y %b% caracteres.\",\n        length: \"Debe tener exáctamente %a% caracteres.\",\n        nif: \"Ha de ser un DNI o NIE válido.\",\n        regexp: \"El valor de este campo no es correcto.\"\n    }\n    var config =\n    {\n        next_text:\"Siguiente\",\n        previous_text:\"Anterior\",\n        ending_button_text:\"Enviar\",\n        starting_button_text:\"Comenzar\"\n    }\n    $.extend(materialid.messages, messages);\n    $.extend(materialid.config, config);\n}\n"],"sourceRoot":"/source/"}