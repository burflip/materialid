{"version":3,"sources":["core.js","steps.js","validators/between.js","validators/cif.js","validators/custom.js","validators/digits.js","validators/dni.js","validators/email.js","validators/identical.js","validators/nie.js","validators/nif.js","validators/notEmpty.js","validators/numeric.js","validators/password.js","validators/regexp.js"],"names":["initMaterialid","selector","config_array","$","extend","materialid","validateMaterialidContainer","config","steps","initMaterialidSteps","is","initMaterialidListeners","on","e","evaluateMaterialidFields","form_obj","is_valid","submit_callback","console","log","each","fields","k","v","addMaterialidValidationListenerToField","find","field","field_options","trigger","change","validateMaterialidField","field_valid","msg","enable_visible","attr","validators","materialidValidator","undefined","messages","error_callback","success_callback","custom_success_field","custom_error_field","callback","settings","callbacksIndex","materialidErrorCallback","length","after","text","removeClass","addClass","materialidSuccessCallback","remove","hideMaterialidSteps","calculateMaterialidStepsTotal","renderMaterialidControls","renderMaterialidNavigator","render_navigator","starting_step","animateMaterialidNavigator","step_class","hide","show","stepMaterialidForward","current_step","total_steps","stepMaterialid","stepMaterialidBackward","oper","last_step","ending_step","zero","inner","last","html","startingMaterialidNavigationControls","submitMaterialidNavigationControls","usualMaterialidNavigationControls","loader","percent","Math","round","animate","left","css","width","next_button_class","starting_button_icon","starting_button_text","previous_button_class","previous_text","previous_button_icon","next_text","next_button_icon","submit_button_class","submit_button_icon","submit_button_text","between","min_included","max_included","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","value","val","isNaN","cif","notEmpty","suma","ultima","unumero","xxx","toUpperCase","pares","impares","uletra","regular","test","substr","cont","parseInt","toString","custom","digits","setttings","dni","validateDNI","charIndex","la","charAt","email","identical","field_id","nie","str","validateNIE","replace","letter","nif","field_type","trim","numeric","password","min_length","uppercase","number","special_chars","regexp","pattern","locale","on_forward","on_backward","fn","this"],"mappings":"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","file":"materialid.min.js","sourcesContent":["/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n/**\n * Main materialid configuration\n * @type {{fields: undefined, config: {locale: string, trigger: string, error_callback: materialidErrorCallback, success_callback: materialidSuccessCallback, enable_visible: boolean, steps: undefined, step_class: string, on_forward: undefined, on_backward: undefined, current_step: number, last_step: number, total_steps: number, next_text: string, previous_text: string, ending_button_text: string, starting_button_text: string, previous_button_class: string, next_button_class: string, submit_button_class: string, render_navigator: boolean}, form_obj: {selector: undefined, is_valid: boolean}, messages: {}}}\n */\nvar materialid = {\n    fields: undefined,\n    config: {\n        locale: \"es_ES\",\n        trigger: \"change\",\n        error_callback: materialidErrorCallback,\n        success_callback: materialidSuccessCallback,\n        enable_visible: true,\n        steps: undefined,\n        step_class: \"step\",\n        on_forward: undefined,\n        on_backward: undefined,\n        starting_step:1,\n        ending_step: 0,\n        current_step: 0,\n        last_step: 0,\n        total_steps: 0,\n        next_text: \"Next\",\n        previous_text: \"Previous\",\n        submit_button_text: \"Submit\",\n        starting_button_text: \"Next\",\n        previous_button_class: \"indigo\",\n        next_button_class: \"indigo\",\n        submit_button_class: \"indigo\",\n        next_button_icon: \"keyboard_arrow_right\",\n        previous_button_icon: \"keyboard_arrow_left\",\n        submit_button_icon: \"done\",\n        starting_button_icon: \"keyboard_arrow_right\",\n        render_navigator: false\n    },\n    form_obj: {\n        selector: undefined,\n        is_valid: true\n    },\n    messages: {}\n}\n\n/**\n * Index of current defined validators\n * @type {{notEmpty: notEmpty}}\n */\nvar callbacksIndex = {\n    \"notEmpty\": notEmpty,\n    \"regexp\": regexp,\n    \"digits\": digits,\n    \"numeric\": numeric,\n    \"dni\": dni,\n    \"nie\": nie,\n    \"cif\": cif,\n    \"nif\" : nif,\n    \"custom\": custom,\n    \"between\": between\n}\n\n/**\n * Creation of jQuery function\n */\n$.fn.materialid = function (config_array) {\n    initMaterialid(this, config_array)\n}\n\n\n/**\n * Initialization of Materialid\n * @param selector\n * @param config_array\n */\nfunction initMaterialid(selector, config_array) {\n\n    $.extend(true, materialid, config_array);\n    validateMaterialidContainer(selector)\n}\n\n/**\n * Materialid container validation\n * @param selector\n * @param config_array\n */\nfunction validateMaterialidContainer(selector) {\n    // Step-form functionality\n    if (materialid.config.steps == true) {\n        initMaterialidSteps();\n    }\n    if (selector.is(\"form\")) {\n        initMaterialidListeners(selector);\n        //Attaching form submit validation\n        selector.on(\"submit\", function (e) {\n\n            evaluateMaterialidFields(selector);\n            if (!materialid.form_obj.is_valid) {\n                return false;\n            } else {\n                if (typeof materialid.config.submit_callback === \"function\") {\n                    return materialid.config.submit_callback();\n                } else {\n                    return true;\n                }\n            }\n        });\n    } else if (selector.is(\"div\")) {\n        initMaterialidListeners(selector);\n    } else {\n        console.log(\"Invalid selector: \", selector);\n        console.log(\"Types availables: div and form.\");\n    }\n}\n\n/**\n * Inits the fields' listeners to invoke validation\n * @param selector\n * @param config_array\n */\nfunction initMaterialidListeners(selector) {\n    $.each(materialid.fields, function (k, v) {\n        addMaterialidValidationListenerToField(selector.find(\"#\" + k), v);\n    })\n}\n\n/**\n * Attach a validation listener to a field\n * @param field\n * @param field_options\n */\nfunction addMaterialidValidationListenerToField(field, field_options) {\n    if (materialid.config.trigger == \"change\") {\n        field.change(function () {\n            validateMaterialidField(field, field_options);\n        })\n    } else {\n        //TODO: attach to trigger\n    }\n}\n\n/**\n * Validates a single field bearing in mind the \"enable_visible\" configuration option\n * @param field\n * @param field_options\n * @returns {boolean}\n */\nfunction validateMaterialidField(field, field_options) {\n    var field_valid = true;\n    var msg = \"\";\n    if ((materialid.config.enable_visible && (field.is(\":visible\") || field.attr(\"type\") == \"hidden\")) || !materialid.config.enable_visible) {\n        if (typeof field_options.validators !== \"undefined\") {\n            $.each(field_options.validators, function (k, v) {\n                field_valid = materialidValidator(field, k, v) ? field_valid : false;\n                msg = (v[\"msg\"] !== undefined) ? v[\"msg\"] : ((materialid.messages[k] == undefined) ? msg : materialid.messages[k]);\n            })\n        } else {\n            field_valid = true;\n            console.log(\"Be careful, validator list for field #\" + field.attr(\"id\") + \" is undefined.\");\n        }\n        if (field_options.error_callback !== undefined && !field_valid) {\n            // TODO: add documentation for custom_error_field\n            if (field_options.custom_error_field !== undefined) {\n                field_options.error_callback(field_options.custom_error_field, msg);\n            } else {\n                field_options.error_callback(field, msg);\n            }\n        } else if (field_options.success_callback !== undefined && field_valid) {\n            // TODO: add documentation for custom_success_field\n            if (field_options.custom_success_field !== undefined) {\n                field_options.success_callback(field_options.custom_success_field, msg);\n            } else {\n                field_options.success_callback(field, msg);\n            }\n        } else {\n            field_valid ? materialid.config.success_callback(field, msg) : materialid.config.error_callback(field, msg);\n        }\n        materialid.form_obj.is_valid = field_valid ? materialid.form_obj.is_valid : false;\n    }\n    return field_valid;\n}\n\n/**\n * Evaluate all fields without calling or invoking listeners.\n * @param selector\n * @param config_array\n */\nfunction evaluateMaterialidFields(selector) {\n    materialid.form_obj.is_valid = true;\n    $.each(materialid.fields, function (k, v) {\n        validateMaterialidField(selector.find(\"#\" + k), v);\n    })\n}\n\n/**\n * Calls a concrete validator if exists, or return false and output an error on the console.\n * @param field\n * @param callback\n * @param settings\n * @returns {*}\n */\nfunction materialidValidator(field, callback, settings) {\n    if (typeof callbacksIndex[callback] !== \"undefined\") {\n        return callbacksIndex[callback](field, settings);\n    } else {\n        console.log(\"Callback \" + callback + \" undefined.\");\n        return false;\n    }\n}\n\n/**\n * Default error callback\n * @param field\n * @param msg\n */\nfunction materialidErrorCallback(field, msg) {\n    if ($(\"#\" + field.attr(\"id\") + \"_validation_msg\").length == 0) {\n        field.after(\"<span id='\" + field.attr(\"id\") + \"_validation_msg' class='validation-msg'></span>\");\n    }\n    $(\"#\" + field.attr(\"id\") + \"_validation_msg\").text(msg);\n    field.removeClass(\"valid\").addClass(\"invalid\");\n}\n\n/**\n * Default success callback\n * @param field\n * @param msg\n */\nfunction materialidSuccessCallback(field, msg) {\n    $(\"#\" + field.attr(\"id\") + \"_validation_msg\").remove();\n    field.removeClass(\"invalid\").addClass(\"valid\");\n}","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nfunction initMaterialidSteps() {\n    hideMaterialidSteps();\n    calculateMaterialidStepsTotal();\n    renderMaterialidControls();\n    (materialid.config.render_navigator) ? renderMaterialidNavigator() : null;\n    (materialid.config.render_navigator && materialid.config.starting_step != 1) ? animateMaterialidNavigator() : null;\n\n}\n\nfunction hideMaterialidSteps() {\n    $(\".\" + materialid.config.step_class).hide();\n    $($(\".\" + materialid.config.step_class)[0]).show();\n}\n\nfunction stepMaterialidForward() {\n    if (materialid.config.current_step < materialid.config.total_steps) {\n        evaluateMaterialidFields($($(\".\" + materialid.config.step_class)[materialid.config.current_step]), materialid);\n        if (materialid.form_obj.is_valid) {\n            stepMaterialid(+1);\n        }\n    }\n}\n\nfunction stepMaterialidBackward() {\n    if (materialid.config.current_step > 0) {\n        stepMaterialid(-1);\n    }\n}\n\nfunction stepMaterialid(oper) {\n    materialid.config.last_step = materialid.config.current_step;\n    materialid.config.current_step += oper;\n    $($(\".\" + materialid.config.step_class)[materialid.config.last_step]).hide();\n    $($(\".\" + materialid.config.step_class)[materialid.config.current_step]).show();\n    renderMaterialidControls();\n    (materialid.config.render_navigator) ? animateMaterialidNavigator() : null;\n}\n\nfunction calculateMaterialidStepsTotal() {\n\n    materialid.config.total_steps = $(\".\" + materialid.config.step_class).length - 1;\n    materialid.config.ending_step = (materialid.config.ending_step == 0\n    || materialid.config.ending_step < materialid.config.total_steps) ? materialid.config.total_steps : materialid.config.ending_step;\n}\n\n/**\n * Uses .navigation-controls selector to generate navigation buttons\n */\nfunction renderMaterialidControls() {\n    var zero = materialid.config.current_step == 0,\n        inner = materialid.config.current_step == materialid.config.total_steps,\n        last = materialid.config.last_step == 0 || materialid.config.last_step == materialid.config.total_steps,\n        change = zero || inner || last;\n    if (zero) {\n        $(\".navigation-controls\").html(startingMaterialidNavigationControls());\n    } else if (inner) {\n        $(\".navigation-controls\").html(submitMaterialidNavigationControls());\n    } else if (last) {\n        $(\".navigation-controls\").html(usualMaterialidNavigationControls());\n    }\n    if (change) {\n        $(\".step-forward\").on(\"click\", stepMaterialidForward);\n        $(\".step-backward\").on(\"click\", stepMaterialidBackward);\n    }\n}\n\n/**\n * Uses .navigator selector to generate navigation progress bar and steps\n */\nfunction renderMaterialidNavigator() {\n    var loader = '<div class=\"steps-navigation-container\">' +\n        '    <div class=\"step-indicator initial-step\">' +\n        '        ' + materialid.config.starting_step +\n        '    </div>' +\n        '    <div class=\"progress\">' +\n        '        <div class=\"determinate\"></div>' +\n        '    </div>' +\n        '</div>';\n    $(\".navigator\").html(loader);\n}\n\nfunction animateMaterialidNavigator() {\n    var percent = Math.round((materialid.config.current_step+(materialid.config.starting_step-1)) * 100 / (materialid.config.ending_step));\n    console.log(percent);\n    if ((materialid.config.current_step+(materialid.config.starting_step-1)) == 0) {\n        $(\".steps-navigation-container .step-indicator\").addClass(\"initial-step\")\n    } else {\n        $(\".steps-navigation-container .step-indicator\").removeClass(\"initial-step\")\n    }\n    if (materialid.config.current_step+(materialid.config.starting_step-1) == materialid.config.ending_step) {\n        $(\".steps-navigation-container .step-indicator\").html('<i class=\"material-icons\">done</i>').addClass(\"final-step\");\n    } else {\n        $(\".steps-navigation-container .step-indicator\").text(materialid.config.current_step + materialid.config.starting_step).removeClass(\"final-step\");\n    }\n\n    $(\".steps-navigation-container .step-indicator\").animate({\n        left: percent + \"%\"\n    }, 300, \"linear\");\n\n    $(\".steps-navigation-container .progress .determinate\").css({width: percent + \"%\"});\n}\n\nfunction startingMaterialidNavigationControls() {\n    return '<div class=\"row\">' +\n        '<div class=\"col s12\">' +\n        '<a class=\"waves-effect waves-light btn right step-forward ' + materialid.config.next_button_class + '\"><i class=\"material-icons right\">' + materialid.config.starting_button_icon + '</i>' + materialid.config.starting_button_text + '</a>' +\n        '<div class=\"clearfix\"></div></div>' +\n        '</div>';\n}\n\nfunction usualMaterialidNavigationControls() {\n    return '<div class=\"row\"> ' +\n        '<div class=\"col s12\">' +\n        '<a class=\"waves-effect waves-light btn left step-backward ' + materialid.config.previous_button_class + '\">' +\n        materialid.config.previous_text +\n        '<i class=\"material-icons left\">'+materialid.config.previous_button_icon+'</i></a>' +\n        '<a class=\"waves-effect waves-light btn right step-forward ' + materialid.config.next_button_class + '\">' +\n        materialid.config.next_text +\n        '<i class=\"material-icons right\">'+materialid.config.next_button_icon+'</i></a>' +\n        '<div class=\"clearfix\"></div></div>' +\n        '</div>';\n}\n\nfunction submitMaterialidNavigationControls() {\n    return '<div class=\"row\">' +\n        '<div class=\"col s12\">' +\n        '<a class=\"waves-effect waves-light btn left step-backward ' + materialid.config.previous_button_class + '\">' + materialid.config.previous_text + '<i class=\"material-icons right\">'+materialid.config.previous_button_icon+'</i></a>' +\n        '<button type=\"submit\" class=\"waves-effect waves-light btn right ' + materialid.config.submit_button_class + '\"><i class=\"material-icons right\">' + materialid.config.submit_button_icon + '</i>' + materialid.config.submit_button_text + '</button>' +\n        '<div class=\"clearfix\"></div></div>' +\n        '</div>'\n}","/** @namespace Number.MAX_SAFE_INTEGER */\n/** @namespace Number.MIN_SAFE_INTEGER */\n/**\n * Returns true if field value is between two parameters.\n * Check if is numeric value. No point to use it along numeric.\n * -----------------------------------\n * Default options are:\n * between:{\n *  min:-Number.MIN_SAFE_INTEGER,\n *  max:Number.MAX_SAFE_INTEGER,\n *  min_included:false,\n *  max_included:false\n * }\n * -----------------------------------\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction between(field, settings) {\n    typeof settings[\"min_included\"] !== \"undefined\" ? null : settings.min_included = false;\n    typeof settings[\"max_included\"] !== \"undefined\" ? null : settings.max_included = false;\n    typeof settings[\"min\"] !== \"undefined\" ? null : settings.min = Number.MIN_SAFE_INTEGER;\n    typeof settings[\"max\"] !== \"undefined\" ? null : settings.max = Number.MAX_SAFE_INTEGER;\n    var is_valid, value = field.val();\n    if (!isNaN(value)) {\n        is_valid = (settings.min < value && value < settings.max) ? true : false;\n        if (settings.min_included && !settings.max_included) {\n            (settings.min <= value && value < settings.max) ? is_valid = true : null;\n        } else if (!settings.min_included && settings.max_included) {\n            (settings.min < value && value <= settings.max) ? is_valid = true : null;\n        } else if (settings.min_included && settings.max_included) {\n            (settings.min <= value && value <= settings.max) ? is_valid = true : null;\n        }\n    }\n    return is_valid;\n}","/**\n * Checks if the field value is a valid spanish Company ID (CIF)\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction cif(field, settings) {\n    if (notEmpty(field)) {\n        var value = field.val().toUpperCase();\n        var suma, ultima, unumero, xxx;\n        var is_valid = false, pares = 0, impares = 0;\n        var uletra = [\"J\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n        var regular = /^[ABCDEFGHKLMNPQS]\\d{7}[0-9,A-J]$/g;\n        if (regular.test(value)) {\n            ultima = value.substr(8, 1);\n\n            for (var cont = 1; cont < 7; cont++) {\n                xxx = (2 * parseInt(value.substr(cont++, 1))).toString() + \"0\";\n                impares += parseInt(xxx.substr(0, 1)) + parseInt(xxx.substr(1, 1));\n                pares += parseInt(value.substr(cont, 1));\n            }\n            xxx = (2 * parseInt(value.substr(cont, 1))).toString() + \"0\";\n            impares += parseInt(xxx.substr(0, 1)) + parseInt(xxx.substr(1, 1));\n\n            suma = (pares + impares).toString();\n            unumero = parseInt(suma.substr(suma.length - 1, 1));\n            unumero = (10 - unumero).toString();\n            if (unumero == 10) unumero = 0;\n\n            if ((ultima == unumero) || (ultima == uletra[unumero]))\n                is_valid = true;\n            else {\n                is_valid = false;\n            }\n        }\n    } else {\n        is_valid = false;\n    }\n    return is_valid;\n}","/**\n * Returns true if callback function returns true.\n * Returns false if callback function returns false, or a non-boolean variable, or is undefined.\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction custom(field, settings) {\n    var is_valid = (typeof settings.callback !== \"undefined\") ? settings.callback(field) : false;\n    is_valid = (typeof is_valid === \"boolean\") ? is_valid : false;\n    return is_valid;\n}","/**\n * Usage:\n * digits:{}\n * Applicable fields: all with .val()\n * @param field\n * @param setttings\n * @returns {boolean}\n */\nfunction digits(field, setttings) {\n    return !/\\D+/g.test(field.val());\n}","/**\n * Checks if field is a valid spanish ID (DNI)\n * @param field\n * @param setttings\n * @returns {boolean}\n */\nfunction dni(field, setttings) {\n    var dni = field.val();\n    return validateDNI(dni);\n}\n\n/**\n * Checks if a value is a valid spanish ID (DNI)\n * @param dni\n * @returns {boolean}\n */\nfunction validateDNI(dni) {\n    var is_valid = true;\n    if (/^\\d{8}[a-zA-Z]$/.test(dni) == true) {\n        var charIndex = parseInt(dni.substr(0, 8)) % 23;\n        var la = 'TRWAGMYFPDXBNJZSQVHLCKET'.charAt(charIndex);\n        la != dni.substr(dni.length - 1, 1).toUpperCase() ? is_valid = false : null;\n    } else {\n        is_valid = false;\n    }\n    return is_valid;\n}","/**\n * Validate an email\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction email(field,settings)\n{\n    return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(field.val());\n}","/**\n * Check if a field value is exactly the same as another\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction identical(field,settings)\n{\n    return (field.val() == $(\"#\"+settings.field_id).val());\n}","/**\n *\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction nie(field, settings) {\n    var str = field.val().toString().toUpperCase();\n    return validateNIE(str);\n}\n\nfunction validateNIE(nie)\n{\n    var is_valid = true;\n    if (/^[XYZ][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKET]$/i.test(nie)) {\n        var nie = nie.replace(/^[X]/, '0').replace(/^[Y]/, '1').replace(/^[Z]/, '2');\n        var letter = nie.substr(-1);\n        ('TRWAGMYFPDXBNJZSQVHLCKET'.charAt(parseInt(nie.substr(0, 8)) % 23) === letter) ? is_valid = true : is_valid = false;\n    } else {\n        is_valid = false;\n    }\n\n    return is_valid;\n}","/**\n * Handcrafted with ♥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n\nfunction nif(field, settings) {\n    var str = field.val().toString().toUpperCase();\n    return validateNIE(str) || validateDNI(str);\n}\n","/**\n * Applicable fields: text, email, password, radio, checkbox, file, select\n * @param field\n * @returns {boolean}\n */\nfunction notEmpty(field) {\n    var is_valid = true;\n    var field_type = field.attr('type');\n    switch (field_type) {\n        case \"checkbox\":\n            field.is(\":checked\") ? null : is_valid = false;\n            break;\n        default:\n            $.trim(field.val()).length === 0 ? is_valid = false : null;\n            break;\n    }\n    return is_valid;\n}","/**\n * Returns if a field value is a numeric value\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction numeric(field, settings) {\n    return !isNaN(field.val());\n}","/**\n *\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction password(field,settings)\n{\n    var value = field.val();\n    var is_valid = (/[a-z]+/.test(value));\n    if(is_valid) {\n        is_valid = (settings.min_length) ? $.trim(value).length >= settings.min_length : is_valid;\n        is_valid = (settings.uppercase && is_valid) ? /[A-Z]+/.test(value) : is_valid;\n        is_valid = (settings.number && is_valid) ? /\\d+/.test(value) : is_valid;\n        is_valid = (settings.special_chars && is_valid) ? /[!@#\\$%\\^\\&*\\)\\(+=._-]+/.test(value) : is_valid;\n    }\n\n    return is_valid;\n}","/**\n * Usage:\n * regexp:{\n *  pattern:/e/\n * }\n * Applicable fields: all with .val()\n * @param field\n * @returns {boolean}\n */\nfunction regexp(field, setttings) {\n    return setttings.pattern.test(field.val());\n}"],"sourceRoot":"/source/"}