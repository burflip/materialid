{"version":3,"sources":["core.js","validators/between.js","validators/cif.js","validators/custom.js","validators/digits.js","validators/dni.js","validators/email.js","validators/identical.js","validators/nie.js","validators/notEmpty.js","validators/numeric.js","validators/password.js","validators/regexp.js"],"names":["initMaterialid","selector","config_array","$","extend","materialid","validateContainer","is","initListeners","submit","e","evaluateFields","form_obj","is_valid","config","submit_callback","preventDefault","console","log","each","fields","k","v","addValidationListenerToField","find","field","field_options","trigger","change","validateField","field_valid","msg","enable_visible","validators","validator","undefined","messages","attr","error_callback","success_callback","callback","settings","callbacksIndex","errorCallback","length","after","text","removeClass","addClass","successCallback","remove","between","min_included","max_included","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","value","val","isNaN","cif","notEmpty","suma","ultima","unumero","xxx","toUpperCase","pares","impares","uletra","regular","test","substr","cont","parseInt","toString","custom","isBoolean","digits","setttings","dni","validateDNI","charIndex","la","charAt","email","identical","field_id","nie","str","replace","letter","field_type","trim","numeric","password","min_length","uppercase","number","special_chars","regexp","pattern","locale","steps","on_forward","on_backward","jQuery","fn","this"],"mappings":"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","file":"materialid.min.js","sourcesContent":["/**\n * Handcrafted with â™¥ Beebit Solutions\n * Real coffee was used in this project development\n * Licensed under MIT License\n * contacto@beebit.es\n */\n/**\n * Main materialid configuration\n * @type {{fields: undefined, config: {locale: string, trigger: string, error_callback: errorCallback, success_callback: successCallback, steps: undefined, on_forward: undefined, on_backward: undefined, enable_visible: boolean, submit_callback: undefined}, form_obj: {selector: undefined, is_valid: boolean}}}\n */\nvar materialid = {\n    fields: undefined,\n    config: {\n        locale: \"es_ES\",\n        trigger: \"change\",\n        error_callback: errorCallback,\n        success_callback: successCallback,\n        steps: undefined,\n        on_forward: undefined,\n        on_backward: undefined,\n        enable_visible: true,\n    },\n    form_obj: {\n        selector: undefined,\n        is_valid: true\n    },\n    messages:{}\n}\n\n/**\n * Index of current defined validators\n * @type {{notEmpty: notEmpty}}\n */\nvar callbacksIndex = {\n    \"notEmpty\": notEmpty,\n    \"regexp\": regexp,\n    \"digits\": digits,\n    \"numeric\": numeric,\n    \"dni\": dni,\n    \"nie\": nie,\n    \"cif\": cif,\n    \"custom\": custom\n}\n\n/**\n * Overloading of jQuery function\n */\njQuery.fn.extend({\n    materialid: function (config_array) {\n        initMaterialid(this, config_array)\n    }\n});\n\n/**\n * Initialization of Materialid\n * @param selector\n * @param config_array\n */\nfunction initMaterialid(selector, config_array) {\n    $.extend(true,materialid,config_array);\n    validateContainer(selector, config_array)\n}\n\n/**\n * Materialid container validation\n * @param selector\n * @param config_array\n */\nfunction validateContainer(selector, config_array) {\n    if (selector.is(\"form\")) {\n        initListeners(selector, config_array);\n        //Attaching form submit validation\n        selector.submit(function (e) {\n            evaluateFields(selector, config_array);\n            if (!materialid.form_obj.is_valid) {\n                e.preventDefault();\n            } else {\n                if(typeof materialid.config.submit_callback === \"function\") {\n                    return materialid.config.submit_callback();\n                } else {\n                    return true;\n                }\n            }\n        });\n    } else if (selector.is(\"div\")) {\n        initListeners(selector, config_array);\n    } else {\n        console.log(\"Invalid selector: \", selector);\n        console.log(\"Types availables: div and form.\");\n    }\n}\n\n/**\n * Inits the fields' listeners to invoke validation\n * @param selector\n * @param config_array\n */\nfunction initListeners(selector, config_array) {\n    $.each(config_array.fields, function (k, v) {\n        addValidationListenerToField(selector.find(\"#\" + k), v);\n    })\n}\n\n/**\n * Attach a validation listener to a field\n * @param field\n * @param field_options\n */\nfunction addValidationListenerToField(field, field_options) {\n    if (materialid.config.trigger == \"change\") {\n        field.change(function () {\n            validateField(field, field_options);\n        })\n    } else {\n        //TODO: attach to trigger\n    }\n}\n\n/**\n * Validates a single field bearing in mind the \"enable_visible\" configuration option\n * @param field\n * @param field_options\n * @returns {boolean}\n */\nfunction validateField(field, field_options) {\n    var field_valid = true;\n    var msg = \"\";\n    if ((materialid.config.enable_visible && field.is(\":visible\")) || !materialid.config.enable_visible) {\n        if(typeof field_options.validators !== \"undefined\") {\n            $.each(field_options.validators, function (k, v) {\n                field_valid = validator(field, k, v) ? field_valid : false;\n                msg = (v[\"msg\"] !== undefined) ? v[\"msg\"] : materialid.messages[k];\n            })\n        } else {\n            field_valid = true;\n            console.log(\"Be careful, validator list for field #\"+field.attr(\"id\")+\" is undefined.\");\n        }\n        if(field_options.error_callback !== undefined && !field_valid) {\n            field_options.error_callback(field,msg);\n        } else if(field_options.success_callback !== undefined && field_valid) {\n            field_options.success_callback(field,msg);\n        } else {\n            field_valid ? materialid.config.success_callback(field, msg) : materialid.config.error_callback(field, msg);\n        }\n        materialid.form_obj.is_valid = field_valid ? materialid.form_obj.is_valid : false;\n    }\n    return field_valid;\n}\n\n/**\n * Evaluate all fields without calling or invoking listeners.\n * @param selector\n * @param config_array\n */\nfunction evaluateFields(selector, config_array) {\n    $.each(config_array.fields, function (k, v) {\n        validateField(selector.find(\"#\" + k), v);\n    })\n}\n\n/**\n * Calls a concrete validator if exists, or return false and output an error on the console.\n * @param field\n * @param callback\n * @param settings\n * @returns {*}\n */\nfunction validator(field, callback, settings) {\n    if (typeof callbacksIndex[callback] !== \"undefined\") {\n        return callbacksIndex[callback](field, settings);\n    } else {\n        console.log(\"Callback \" + callback + \" undefined.\");\n        return false;\n    }\n}\n\n/**\n * Default error callback\n * @param field\n * @param msg\n */\nfunction errorCallback(field, msg) {\n    if ($(\"#\" + field.attr(\"id\") + \"_validation_msg\").length == 0) {\n        field.after(\"<span id='\" + field.attr(\"id\") + \"_validation_msg' class='validation-msg'></span>\");\n    }\n    $(\"#\" + field.attr(\"id\") + \"_validation_msg\").text(msg);\n    field.removeClass(\"valid\").addClass(\"invalid\");\n}\n\n/**\n * Default success callback\n * @param field\n * @param msg\n */\nfunction successCallback(field, msg) {\n    $(\"#\" + field.attr(\"id\") + \"_validation_msg\").remove();\n    field.removeClass(\"invalid\").addClass(\"valid\");\n}","/** @namespace Number.MAX_SAFE_INTEGER */\n/** @namespace Number.MIN_SAFE_INTEGER */\n/**\n * Returns true if field value is between two parameters.\n * Check if is numeric value. No point to use it along numeric.\n * -----------------------------------\n * Default options are:\n * between:{\n *  min:-Number.MIN_SAFE_INTEGER,\n *  max:Number.MAX_SAFE_INTEGER,\n *  min_included:false,\n *  max_included:false\n * }\n * -----------------------------------\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction between(field, settings) {\n    typeof settings[\"min_included\"] !== \"undefined\" ? null : settings.min_included = false;\n    typeof settings[\"max_included\"] !== \"undefined\" ? null : settings.max_included = false;\n    typeof settings[\"min\"] !== \"undefined\" ? null : settings.min = Number.MIN_SAFE_INTEGER;\n    typeof settings[\"max\"] !== \"undefined\" ? null : settings.max = Number.MAX_SAFE_INTEGER;\n    var is_valid, value = field.val();\n    if (!isNaN(value)) {\n        is_valid = (settings.min < value && value < settings.max) ? true : false;\n        if (settings.min_included && !settings.max_included) {\n            (settings.min <= value && value < settings.max) ? is_valid = true : null;\n        } else if (!settings.min_included && settings.max_included) {\n            (settings.min < value && value <= settings.max) ? is_valid = true : null;\n        } else if (settings.min_included && settings.max_included) {\n            (settings.min <= value && value <= settings.max) ? is_valid = true : null;\n        }\n    }\n    return is_valid;\n}","/**\n * Checks if the field value is a valid spanish Company ID (CIF)\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction cif(field, settings) {\n    if (notEmpty(field)) {\n        var value = field.val().toUpperCase();\n        var suma, ultima, unumero, xxx;\n        var is_valid = false, pares = 0, impares = 0;\n        var uletra = [\"J\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\"];\n        var regular = /^[ABCDEFGHKLMNPQS]\\d{7}[0-9,A-J]$/g;\n        if (regular.test(value)) {\n            ultima = value.substr(8, 1);\n\n            for (var cont = 1; cont < 7; cont++) {\n                xxx = (2 * parseInt(value.substr(cont++, 1))).toString() + \"0\";\n                impares += parseInt(xxx.substr(0, 1)) + parseInt(xxx.substr(1, 1));\n                pares += parseInt(value.substr(cont, 1));\n            }\n            xxx = (2 * parseInt(value.substr(cont, 1))).toString() + \"0\";\n            impares += parseInt(xxx.substr(0, 1)) + parseInt(xxx.substr(1, 1));\n\n            suma = (pares + impares).toString();\n            unumero = parseInt(suma.substr(suma.length - 1, 1));\n            unumero = (10 - unumero).toString();\n            if (unumero == 10) unumero = 0;\n\n            if ((ultima == unumero) || (ultima == uletra[unumero]))\n                is_valid = true;\n            else {\n                is_valid = false;\n            }\n        }\n    } else {\n        is_valid = false;\n    }\n    return is_valid;\n}","/**\n * Returns true if callback function returns true.\n * Returns false if callback function returns false, or a non-boolean variable, or is undefined.\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction custom(field, settings) {\n    var is_valid = (typeof settings.callback !== \"undefined\") ? settings.callback(field) : false;\n    is_valid = (isBoolean(is_valid)) ? is_valid : false;\n    return is_valid;\n}","/**\n * Usage:\n * digits:{}\n * Applicable fields: all with .val()\n * @param field\n * @param setttings\n * @returns {boolean}\n */\nfunction digits(field, setttings) {\n    return !/\\D+/g.test(field.val());\n}","/**\n * Checks if field is a valid spanish ID (DNI)\n * @param field\n * @param setttings\n * @returns {boolean}\n */\nfunction dni(field, setttings) {\n    var dni = field.val();\n    return validateDNI(dni);\n}\n\n/**\n * Checks if a value is a valid spanish ID (DNI)\n * @param dni\n * @returns {boolean}\n */\nfunction validateDNI(dni) {\n    var is_valid = true;\n    if (/^\\d{8}[a-zA-Z]$/.test(dni) == true) {\n        var charIndex = parseInt(dni.substr(0, 8)) % 23;\n        var la = 'TRWAGMYFPDXBNJZSQVHLCKET'.charAt(charIndex);\n        la != dni.substr(dni.length - 1, 1).toUpperCase() ? is_valid = false : null;\n    } else {\n        is_valid = false;\n    }\n    return is_valid;\n}","/**\n * Validate an email\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction email(field,settings)\n{\n    return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(field.val());\n}","/**\n * Check if a field value is exactly the same as another\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction identical(field,settings)\n{\n    return (field.val() == $(\"#\"+settings.field_id).val());\n}","/**\n *\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction nie(field, settings) {\n    var is_valid = true;\n    var str = field.val().toString().toUpperCase();\n    if (/^[XYZ][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKET]$/i.test(str)) {\n        var nie = str.replace(/^[X]/, '0').replace(/^[Y]/, '1').replace(/^[Z]/, '2');\n        var letter = str.substr(-1);\n        ('TRWAGMYFPDXBNJZSQVHLCKET'.charAt(parseInt(nie.substr(0, 8)) % 23) === letter) ? is_valid = true : is_valid = false;\n    } else {\n        is_valid = false;\n    }\n\n    return is_valid;\n}","/**\n * Applicable fields: text, email, password, radio, checkbox, file, select\n * @param field\n * @returns {boolean}\n */\nfunction notEmpty(field) {\n    var is_valid = true;\n    var field_type = field.attr('type');\n    switch (field_type) {\n        case \"checkbox\":\n            field.is(\":checked\") ? null : is_valid = false;\n            break;\n        default:\n            $.trim(field.val()).length === 0 ? is_valid = false : null;\n            break;\n    }\n    return is_valid;\n}","/**\n * Returns if a field value is a numeric value\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction numeric(field, settings) {\n    return !isNaN(field.val());\n}","/**\n *\n * @param field\n * @param settings\n * @returns {boolean}\n */\nfunction password(field,settings)\n{\n    var value = field.val();\n    var is_valid = (/[a-z]+/.test(value));\n    if(is_valid) {\n        is_valid = (settings.min_length) ? $.trim(value).length >= settings.min_length : is_valid;\n        is_valid = (settings.uppercase && is_valid) ? /[A-Z]+/.test(value) : is_valid;\n        is_valid = (settings.number && is_valid) ? /\\d+/.test(value) : is_valid;\n        is_valid = (settings.special_chars && is_valid) ? /[!@#\\$%\\^\\&*\\)\\(+=._-]+/.test(value) : is_valid;\n    }\n\n    return is_valid;\n}","/**\n * Usage:\n * regexp:{\n *  pattern:/e/\n * }\n * Applicable fields: all with .val()\n * @param field\n * @returns {boolean}\n */\nfunction regexp(field, setttings) {\n    return setttings.pattern.test(field.val());\n}"],"sourceRoot":"/source/"}